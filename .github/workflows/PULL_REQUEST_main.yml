name: Release a new version  

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronized
    branches:
      - main
    paths-ignore:
    - '.github/**/*.yml'
  check_suite:
    types:
      - completed
      
env:
    ANDROID_BUILD_PATH: ./build/app/outputs/flutter-apk/
    ANDROID_APK_NAME: app.apk
    ARTIFACT_NAME: app.apk

jobs:
    build:
      name: Run tests and builds
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.keystore.asc
          echo "${{ secrets.RELEASE_KEYSTORE_PROPERTIES }}" > keystore.properties.asc
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" --batch release.keystore.asc > android/release.keystore
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" --batch keystore.properties.asc > android/keystore.properties
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.22.4'
      - run: flutter pub get
      - run: flutter test
      - run: ENVFILE=.env.dev flutter build apk --flavor=dev
    # - run: flutter build ios --release --no-codesign
    
      - uses: actions/upload-artifact@v2
        with:
          name: app.apk
          path: '${{ env.ANDROID_BUILD_PATH }}${{ env.ANDROID_APK_NAME }}'

    release:
      name: Creates Github Release and upload artifact to Firebase
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Get the branch name
          uses: mdecoleman/pr-branch-name@1.0.0
          id: vars
          with:
            repo-token: ${{ secrets.GITHUB_TOKEN }}

        - name: Get the release code
          uses: bhowell2/github-substring-action@v1.0.0
          id: version
          with:
            value: ${{ steps.vars.outputs.branch }}
            index_of_str: release/

        - name: Download artifact
          id: download
          uses: actions/download-artifact@v2
          with:
            name: ${{ env.ARTIFACT_NAME }}

        - name: Create Release
          uses: meeDamian/github-release@2.0
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ steps.version.outputs.substring }}
            name: ${{ steps.version.outputs.substring }}
            prerelease:  false
            gzip: false
            files: >
              ${{steps.download.outputs.download-path}}/${{ env.ARTIFACT_NAME }}

        - name: upload artifact to Firebase App Distribution
          uses: wzieba/Firebase-Distribution-Github-Action@v1
          with:
            appId: ${{secrets.FIREBASE_APP_ID}}
            token: ${{secrets.FIREBASE_TOKEN}}
            groups: developers
            file: ${{steps.download.outputs.download-path}}/${{ env.ARTIFACT_NAME }}

    automerge:
      name: Merges release PR into main
      runs-on: ubuntu-latest
      needs: release
      steps:
        - name: automerge
          uses: "pascalgn/automerge-action@v0.12.0"
          env:
            GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
            MERGE_LABELS: ""
            MERGE_REMOVE_LABELS: ""
            MERGE_METHOD: "squash"
            UPDATE_METHOD: "rebase"
              

    sync-branch:
      name: Merges release PR into develop
      runs-on: ubuntu-latest
      needs: release
      steps:
        - uses: actions/checkout@master

        - name: release -> develop
          uses: devmasx/merge-branch@v1.3.1
          with:
            type: now
            target_branch: develop
            github_token: ${{ github.token }}

